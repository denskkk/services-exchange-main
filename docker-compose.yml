version: "3.9"
services:
  web:
    container_name: "web"
    restart: unless-stopped
    build: ./src
    command: gunicorn django_project.wsgi -b 0.0.0.0:8000 --workers=2 --threads=4 --worker-class=gthread
    volumes:
      - ./src:/code
    # Load production environment variables for Django
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
  db:
    container_name: "db"
    restart: unless-stopped
    image: postgres:16
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data/
    # Pass credentials via env file; make sure .env.prod defines POSTGRES_*
    env_file:
      - ./.env.prod
  redis:
    container_name: "redis"
    restart: unless-stopped
    image: redis:7.2.4
    volumes:
      - ./docker/redis:/data
  worker:
    container_name: "worker"
    restart: unless-stopped
    build: ./src
    volumes:
      - ./src:/code
    command: ['celery', '--workdir=/code', '-A', 'django_project', 'worker']
    # Load the same production env vars as web
    env_file:
      - ./.env.prod
    depends_on:
      - redis
      - db
  nginx:
    container_name: "nginx"
    image: nginx:1.23-alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/logs:/var/log/nginx
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./src/uploads:/uploads